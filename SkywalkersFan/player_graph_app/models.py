from django.db import models

# Create your models here.
class player_data(models.Model):
    player_name=models.CharField(max_length=50)
    player_number=models.CharField(max_length=50)
    player_position=models.CharField(max_length=50)
    player_img=models.CharField(max_length=255)
    player_birth=models.CharField(max_length=50)
    player_height=models.CharField(max_length=50)
    player_weight=models.CharField(max_length=50)
    player_school=models.CharField(max_length=50)
    player_history=models.CharField(max_length=500)
    team=models.CharField(max_length=50)
    match_count=models.IntegerField()
    set_count=models.IntegerField()
    score=models.IntegerField()
    attack_success=models.FloatField()
    serve_success=models.FloatField()
    set_success=models.FloatField()
    blocking_success=models.FloatField()
    attack_eff=models.FloatField()
    receive_eff=models.FloatField()
    dig_success=models.FloatField()

class player_season_data(models.Model):
    player_name=models.CharField(max_length=50)
    player_position=models.CharField(max_length=50)
    player_number=models.CharField(max_length=50)
    game=models.CharField(max_length=50)
    season=models.CharField(max_length=50)
    match_count=models.IntegerField()
    set_count=models.IntegerField()
    score=models.IntegerField()
    attack_success=models.FloatField()
    blocking_avg=models.FloatField()
    serve_avg=models.FloatField()
    set_avg=models.FloatField()
    receive_eff=models.FloatField()
    dig_avg=models.FloatField()
    penalty=models.IntegerField()
    mistake=models.IntegerField()

class center_player(models.Model):
    rank=models.IntegerField()
    player_name=models.CharField(max_length=50)
    team=models.CharField(max_length=50)
    toprankingpoint=models.FloatField()
    match_count=models.IntegerField()
    set_count=models.IntegerField()
    score=models.IntegerField()
    mistake=models.IntegerField()
    attack_trial=models.IntegerField()
    attack_success=models.IntegerField()
    attack_block=models.IntegerField()
    attack_mistake=models.IntegerField()
    serve_trial=models.IntegerField()
    serve_success=models.IntegerField()
    serve_mistake=models.IntegerField()
    set_trial=models.IntegerField()
    set_success=models.IntegerField()
    blocking_trial=models.IntegerField()
    blocking_success=models.IntegerField()
    blocking_mistake=models.IntegerField()
    receive_trial=models.IntegerField()
    receive_exact=models.IntegerField()
    receive_fail=models.IntegerField()
    dig_trial=models.IntegerField()
    dig_success=models.IntegerField()

class left_player(models.Model):
    rank=models.IntegerField()
    player_name=models.CharField(max_length=50)
    team=models.CharField(max_length=50)
    toprankingpoint=models.FloatField()
    match_count=models.IntegerField()
    set_count=models.IntegerField()
    score=models.IntegerField()
    mistake=models.IntegerField()
    attack_trial=models.IntegerField()
    attack_success=models.IntegerField()
    attack_block=models.IntegerField()
    attack_mistake=models.IntegerField()
    serve_trial=models.IntegerField()
    serve_success=models.IntegerField()
    serve_mistake=models.IntegerField()
    set_trial=models.IntegerField()
    set_success=models.IntegerField()
    blocking_trial=models.IntegerField()
    blocking_success=models.IntegerField()
    blocking_mistake=models.IntegerField()
    receive_trial=models.IntegerField()
    receive_exact=models.IntegerField()
    receive_fail=models.IntegerField()
    dig_trial=models.IntegerField()
    dig_success=models.IntegerField()

class libero_player(models.Model):
    rank=models.IntegerField()
    player_name=models.CharField(max_length=50)
    team=models.CharField(max_length=50)
    toprankingpoint=models.FloatField()
    match_count=models.IntegerField()
    set_count=models.IntegerField()
    score=models.IntegerField()
    mistake=models.IntegerField()
    attack_trial=models.IntegerField()
    attack_success=models.IntegerField()
    attack_block=models.IntegerField()
    attack_mistake=models.IntegerField()
    serve_trial=models.IntegerField()
    serve_success=models.IntegerField()
    serve_mistake=models.IntegerField()
    set_trial=models.IntegerField()
    set_success=models.IntegerField()
    blocking_trial=models.IntegerField()
    blocking_success=models.IntegerField()
    blocking_mistake=models.IntegerField()
    receive_trial=models.IntegerField()
    receive_exact=models.IntegerField()
    receive_fail=models.IntegerField()
    dig_trial=models.IntegerField()
    dig_success=models.IntegerField()

class right_player(models.Model):
    rank=models.IntegerField()
    player_name=models.CharField(max_length=50)
    team=models.CharField(max_length=50)
    toprankingpoint=models.FloatField()
    match_count=models.IntegerField()
    set_count=models.IntegerField()
    score=models.IntegerField()
    mistake=models.IntegerField()
    attack_trial=models.IntegerField()
    attack_success=models.IntegerField()
    attack_block=models.IntegerField()
    attack_mistake=models.IntegerField()
    serve_trial=models.IntegerField()
    serve_success=models.IntegerField()
    serve_mistake=models.IntegerField()
    set_trial=models.IntegerField()
    set_success=models.IntegerField()
    blocking_trial=models.IntegerField()
    blocking_success=models.IntegerField()
    blocking_mistake=models.IntegerField()
    receive_trial=models.IntegerField()
    receive_exact=models.IntegerField()
    receive_fail=models.IntegerField()
    dig_trial=models.IntegerField()
    dig_success=models.IntegerField()

class setter_player(models.Model):
    rank=models.IntegerField()
    player_name=models.CharField(max_length=50)
    team=models.CharField(max_length=50)
    toprankingpoint=models.FloatField()
    match_count=models.IntegerField()
    set_count=models.IntegerField()
    score=models.IntegerField()
    mistake=models.IntegerField()
    attack_trial=models.IntegerField()
    attack_success=models.IntegerField()
    attack_block=models.IntegerField()
    attack_mistake=models.IntegerField()
    serve_trial=models.IntegerField()
    serve_success=models.IntegerField()
    serve_mistake=models.IntegerField()
    set_trial=models.IntegerField()
    set_success=models.IntegerField()
    blocking_trial=models.IntegerField()
    blocking_success=models.IntegerField()
    blocking_mistake=models.IntegerField()
    receive_trial=models.IntegerField()
    receive_exact=models.IntegerField()
    receive_fail=models.IntegerField()
    dig_trial=models.IntegerField()
    dig_success=models.IntegerField()