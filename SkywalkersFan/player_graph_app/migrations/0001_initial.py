# Generated by Django 4.1.1 on 2022-10-26 06:25

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='center_player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField()),
                ('player_name', models.CharField(max_length=50)),
                ('team', models.CharField(max_length=50)),
                ('toprankingpoint', models.FloatField()),
                ('match_count', models.IntegerField()),
                ('set_count', models.IntegerField()),
                ('score', models.IntegerField()),
                ('mistake', models.IntegerField()),
                ('attack_trial', models.IntegerField()),
                ('attack_success', models.IntegerField()),
                ('attack_block', models.IntegerField()),
                ('attack_mistake', models.IntegerField()),
                ('serve_trial', models.IntegerField()),
                ('serve_success', models.IntegerField()),
                ('serve_mistake', models.IntegerField()),
                ('set_trial', models.IntegerField()),
                ('set_success', models.IntegerField()),
                ('blocking_trial', models.IntegerField()),
                ('blocking_success', models.IntegerField()),
                ('blocking_mistake', models.IntegerField()),
                ('receive_trial', models.IntegerField()),
                ('receive_exact', models.IntegerField()),
                ('receive_fail', models.IntegerField()),
                ('dig_trial', models.IntegerField()),
                ('dig_success', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='left_player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField()),
                ('player_name', models.CharField(max_length=50)),
                ('team', models.CharField(max_length=50)),
                ('toprankingpoint', models.FloatField()),
                ('match_count', models.IntegerField()),
                ('set_count', models.IntegerField()),
                ('score', models.IntegerField()),
                ('mistake', models.IntegerField()),
                ('attack_trial', models.IntegerField()),
                ('attack_success', models.IntegerField()),
                ('attack_block', models.IntegerField()),
                ('attack_mistake', models.IntegerField()),
                ('serve_trial', models.IntegerField()),
                ('serve_success', models.IntegerField()),
                ('serve_mistake', models.IntegerField()),
                ('set_trial', models.IntegerField()),
                ('set_success', models.IntegerField()),
                ('blocking_trial', models.IntegerField()),
                ('blocking_success', models.IntegerField()),
                ('blocking_mistake', models.IntegerField()),
                ('receive_trial', models.IntegerField()),
                ('receive_exact', models.IntegerField()),
                ('receive_fail', models.IntegerField()),
                ('dig_trial', models.IntegerField()),
                ('dig_success', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='libero_player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField()),
                ('player_name', models.CharField(max_length=50)),
                ('team', models.CharField(max_length=50)),
                ('toprankingpoint', models.FloatField()),
                ('match_count', models.IntegerField()),
                ('set_count', models.IntegerField()),
                ('score', models.IntegerField()),
                ('mistake', models.IntegerField()),
                ('attack_trial', models.IntegerField()),
                ('attack_success', models.IntegerField()),
                ('attack_block', models.IntegerField()),
                ('attack_mistake', models.IntegerField()),
                ('serve_trial', models.IntegerField()),
                ('serve_success', models.IntegerField()),
                ('serve_mistake', models.IntegerField()),
                ('set_trial', models.IntegerField()),
                ('set_success', models.IntegerField()),
                ('blocking_trial', models.IntegerField()),
                ('blocking_success', models.IntegerField()),
                ('blocking_mistake', models.IntegerField()),
                ('receive_trial', models.IntegerField()),
                ('receive_exact', models.IntegerField()),
                ('receive_fail', models.IntegerField()),
                ('dig_trial', models.IntegerField()),
                ('dig_success', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='player_data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_name', models.CharField(max_length=50)),
                ('player_number', models.CharField(max_length=50)),
                ('player_position', models.CharField(max_length=50)),
                ('player_img', models.CharField(max_length=255)),
                ('player_birth', models.CharField(max_length=50)),
                ('player_height', models.CharField(max_length=50)),
                ('player_weight', models.CharField(max_length=50)),
                ('player_school', models.CharField(max_length=50)),
                ('player_history', models.CharField(max_length=500)),
                ('team', models.CharField(max_length=50)),
                ('match_count', models.IntegerField()),
                ('set_count', models.IntegerField()),
                ('score', models.IntegerField()),
                ('attack_success', models.FloatField()),
                ('serve_success', models.FloatField()),
                ('set_success', models.FloatField()),
                ('blocking_success', models.FloatField()),
                ('attack_eff', models.FloatField()),
                ('receive_eff', models.FloatField()),
                ('dig_success', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='player_season_data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_name', models.CharField(max_length=50)),
                ('player_position', models.CharField(max_length=50)),
                ('player_number', models.CharField(max_length=50)),
                ('game', models.CharField(max_length=50)),
                ('season', models.CharField(max_length=50)),
                ('match_count', models.IntegerField()),
                ('set_count', models.IntegerField()),
                ('score', models.IntegerField()),
                ('attack_success', models.FloatField()),
                ('blocking_avg', models.FloatField()),
                ('serve_avg', models.FloatField()),
                ('set_avg', models.FloatField()),
                ('receive_eff', models.FloatField()),
                ('dig_avg', models.FloatField()),
                ('penalty', models.IntegerField()),
                ('mistake', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='right_player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField()),
                ('player_name', models.CharField(max_length=50)),
                ('team', models.CharField(max_length=50)),
                ('toprankingpoint', models.FloatField()),
                ('match_count', models.IntegerField()),
                ('set_count', models.IntegerField()),
                ('score', models.IntegerField()),
                ('mistake', models.IntegerField()),
                ('attack_trial', models.IntegerField()),
                ('attack_success', models.IntegerField()),
                ('attack_block', models.IntegerField()),
                ('attack_mistake', models.IntegerField()),
                ('serve_trial', models.IntegerField()),
                ('serve_success', models.IntegerField()),
                ('serve_mistake', models.IntegerField()),
                ('set_trial', models.IntegerField()),
                ('set_success', models.IntegerField()),
                ('blocking_trial', models.IntegerField()),
                ('blocking_success', models.IntegerField()),
                ('blocking_mistake', models.IntegerField()),
                ('receive_trial', models.IntegerField()),
                ('receive_exact', models.IntegerField()),
                ('receive_fail', models.IntegerField()),
                ('dig_trial', models.IntegerField()),
                ('dig_success', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='setter_player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField()),
                ('player_name', models.CharField(max_length=50)),
                ('team', models.CharField(max_length=50)),
                ('toprankingpoint', models.FloatField()),
                ('match_count', models.IntegerField()),
                ('set_count', models.IntegerField()),
                ('score', models.IntegerField()),
                ('mistake', models.IntegerField()),
                ('attack_trial', models.IntegerField()),
                ('attack_success', models.IntegerField()),
                ('attack_block', models.IntegerField()),
                ('attack_mistake', models.IntegerField()),
                ('serve_trial', models.IntegerField()),
                ('serve_success', models.IntegerField()),
                ('serve_mistake', models.IntegerField()),
                ('set_trial', models.IntegerField()),
                ('set_success', models.IntegerField()),
                ('blocking_trial', models.IntegerField()),
                ('blocking_success', models.IntegerField()),
                ('blocking_mistake', models.IntegerField()),
                ('receive_trial', models.IntegerField()),
                ('receive_exact', models.IntegerField()),
                ('receive_fail', models.IntegerField()),
                ('dig_trial', models.IntegerField()),
                ('dig_success', models.IntegerField()),
            ],
        ),
    ]
